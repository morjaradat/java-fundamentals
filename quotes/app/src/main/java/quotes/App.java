/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;


import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;


public class App {
//    public static void main(String[] args) throws IOException {
////        System.out.println(args[0]);
//        quoteFromApi();
//    }
    public static void main(String[] args) throws IOException {

//        System.out.println(args.length);
        if (args[0].equals("local")){
            System.out.println("The quote from local machine ");
            String  path = "./quotes/app/src/main/resources/recentquotes.json";
            readJson(path);
        }else {
            quoteFromApi();
        }

    }

    public static Boolean readJson(String path) {
        try {
            Gson gson = new Gson();
//            System.out.println("local");
            JsonReader jsonReader = new JsonReader(new BufferedReader(new FileReader(path)));

            ArrayList<String> author = new ArrayList<>();
            ArrayList<String> text = new ArrayList<>();

            jsonReader.beginArray();
            while (jsonReader.hasNext()) {
                Quotes obj2 = gson.fromJson(jsonReader, Quotes.class);

                author.add(obj2.getAuthor());
                text.add(obj2.getText());
            }
            jsonReader.endArray();

//            System.out.println(author.size());
//            System.out.println(text.size());
            int random = (int) Math.floor(Math.random() * author.size());

            System.out.println("author :" + author.get(random) + "\n" + "quote : " + text.get(random));
            return true;
        } catch (IOException e) {
            System.out.println("error");
            return false;
        }

    }

    public static void quoteFromApi() throws IOException {
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        try {
            HttpURLConnection apiData = (HttpURLConnection) new URL(url).openConnection();
            apiData.setConnectTimeout(5000);
            apiData.setReadTimeout(5000);
//        System.out.println(apiData);
            apiData.setRequestMethod("GET");
            int responseCode = apiData.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {

//                System.out.println(apiData);

                InputStreamReader inputStreamReader = new InputStreamReader(apiData.getInputStream());
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);

                String data = bufferedReader.readLine();
//                System.out.println(data);

                bufferedReader.close();
                inputStreamReader.close();

                Gson gson = new Gson();

                QuotesFromAPI quotes = gson.fromJson(data, QuotesFromAPI.class);
//                System.out.println("-------------------------------");
                System.out.println("The quote from the Internet ");

                System.out.println("QuoteAuthor : " + quotes.getQuoteAuthor());
                System.out.println("QuoteText : " + quotes.getQuoteText());


                try {
                    System.out.println("-------------------------------");
//                    JsonParser parser = new JsonParser();
                    Object obj = JsonParser.parseReader(new FileReader("./quotes/app/src/main/resources/recentquotesCopy.json"));
//                    JsonObject jsonObject = (JsonObject) obj;
                JsonObject object= new JsonObject();
                object.addProperty("author",quotes.getQuoteAuthor());
                object.addProperty("text",quotes.getQuoteText());

                    JsonArray jsonArray= new JsonArray();
                    jsonArray.addAll((JsonArray) obj);
                    jsonArray.add(object);

                    System.out.println(jsonArray);
                    System.out.println("-------------------------------");

                   BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("./quotes/app/src/main/resources/recentquotesCopy.json"));


                    String oldJson= gson.toJson(jsonArray);
                    bufferedWriter.write(oldJson);
                    bufferedReader.close();
                    bufferedWriter.close();

                } catch (Exception ignore) {

                }

            }
        } catch (IOException e) {
            String path = "./quotes/app/src/main/resources/recentquotesCopy.json";
            System.out.println("from file");
            readJson(path);
        }
    }
}
